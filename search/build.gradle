apply plugin: 'war'

description "Admin web application"


sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/conf'
            srcDir 'src/java'
        }
    }

    test {
        java {
            srcDir 'src/test'
        }
        resources {
            srcDir 'src/test'
        }
    }
}

dependencies {

    providedCompile 'javax.servlet:servlet-api:2.5'
    providedCompile 'javax.servlet:jsp-api:2.0'
    providedCompile 'javax.portlet:portlet-api:2.0'

    compile project(':fedora-api')
    compile project(':common')
    compile project(':static-export')
    compile project(':indexer')
    //compile project(':k5indexer')
    compile project(':import')
    compile project(':import-mets')
    compile project(':security-core')
    compile project(':rest')
    compile project(':mw-process')
    compile project(':authfilters')
    compile project(':solr-migration')

    compile 'javax.servlet:jstl:1.1.2'
    compile 'taglibs:standard:1.1.2'
    compile 'xalan:xalan:2.7.1'
    compile 'net.sf:simplecaptcha:1.2.1'
    compile 'xerces:xercesImpl:2.9.1'
    compile 'com.foxtrottechnologies:javadjvu:0.8.09'
    compile 'com.foxtrottechnologies:djvuframe:0.8.09'

    compile "org.slf4j:slf4j-api:${slf4jversion}"
    compile "org.slf4j:log4j-over-slf4j:${slf4jversion}"
    compile "org.slf4j:slf4j-jdk14:${slf4jversion}"

    compile 'net.sf.json-lib:json-lib:2.4:jdk15'

    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.2'

}


task gitcall(type: Exec) {
    commandLine "git", "rev-parse", "HEAD"
    standardOutput = new ByteArrayOutputStream()
    doLast {
        byte[] bytes = standardOutput.toByteArray()
        ext.hash = new String(bytes).trim();
    }
}


task infofile(dependsOn: gitcall) << {
        def parentFolder = new File("$buildDir/resources/main")
        parentFolder.mkdirs()

        def buildInfoFile = new File("$buildDir/resources/main/build.properties")
        buildInfoFile.withWriter { writer ->
            Properties props = new Properties()
            props.setProperty('version', project.version.toString())
            props.setProperty('hash', gitcall.hash)
            props.store(writer, null)
        }
        def versionStr = project.version.toString()
        def hashStr = gitcall.hash

        println "Created build file ${buildInfoFile.absolutePath} with version ${versionStr} and hash ${hashStr} "
}

processResources.dependsOn infofile

war {
    baseName = 'search'
    archiveName = 'search.war'
    from 'web'
}





