group statistics;


insertStatisticRecord() ::=<<
insert into statistics_access_log
    (record_ID, PID,DATE,REMOTE_IP_ADDRESS,"USER",REQUESTED_URL,STAT_ACTION, SESSION_ID)
    values(nextval('statistics_access_log_ID_SEQUENCE'),?,?,?,?,?,?,?);
>>


insertStatisticRecordDetail() ::=<<
insert into statistic_access_log_detail
      (detail_ID, PID,model,ISSUED_DATE,RIGHTS, LANG, TITLE, BRANCH_ID,RECORD_ID)
values(nextval('statistic_access_log_detail_id_sequence'),?,?,?,?,?,?, ?,?);
>>


insertStatisticRecordDetailAuthor() ::=<<
insert into statistic_access_log_detail_authors
      (author_id,AUTHOR_NAME,DETAIL_ID,RECORD_ID)
values(nextval('statistic_access_log_detail_authors_ID_SEQUENCE'),?,?,?);
>>

exportAllRecord() ::=<<

select 
    sa.record_id as record_id, 
    sa.pid as spid, 
    sa.date as sdate, 
    sa."USER" as suser, 
    sa.remote_ip_address as sremote_ip_address,
    sa.requested_url as srequested_url,
    sa.stat_action as sstat_action,
    sa.session_id as ssession_id,
    detail.pid as dpid,
    detail.model as dmodel,
    detail.issued_date as dissued_date,
    detail.rights as drights,
    detail.lang as dlang,
    detail.title as dtitle
    
 from statistics_access_log sa
 join statistic_access_log_detail detail on (sa.record_id=detail.record_id)

>>



/** vybrany model */
prepareModelView(action, model, paging, fromDefined, toDefined, ipaddr) ::=<<
 CREATE OR REPLACE VIEW _$model$_model_view AS 
   SELECT 
    last(l.record_id) AS record_id,
    last(date) as date,
    last(detail_id) as detail_id,
    last(rights) as rights,
    l.session_id,
    model,
    d.pid,
    stat_action,
    last(d.title) as title,
    last(remote_ip_address) as remote_ip_address
    
   FROM statistics_access_log l
     JOIN statistic_access_log_detail d USING (record_id)
  WHERE d.model::text = '$model$'::text $ipAddrFilter(ipaddr=ipaddr)$
  GROUP BY l.session_id,model,d.pid,stat_action;
>>

selectModelReport(action, model, paging, fromDefined, toDefined, visibility) ::=<<
    $if(action)$ 
    
    select count(*) as count,
         pid,
         max(date) as date,
         last(model) as model,
         last(title) as title
         from _$model$_model_view 
         where stat_action='$action$' $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$ $visibilityFilter(visibility=visibility)$
         group by pid
     order by count DESC   
    $if(paging)$ $paging()$ $endif$

    $else$ 
  
    select count(*) as count,
         pid,
         max(date) as date,
         last(model) as model,
         last(title) as title
         from _$model$_model_view 
         where 1=1 $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$ $visibilityFilter(visibility=visibility)$
         group by pid
     order by count DESC   
    $if(paging)$ $paging()$ $endif$

    $endif$   
>>

selectModelReportUnique(action, model, paging, fromDefined, toDefined, visibility) ::=<<
    $if(action)$ 
    
    SELECT count(*) as count,
        pid, 
        max(date) as date, 
        last(model) as model, 
        last(title) as title 
    FROM (SELECT DISTINCT ON (pid, stat_action, date, remote_ip_address)
            pid,
            stat_action,  
            date_trunc('day', date) as date, 
            remote_ip_address, 
            title, 
            model  
          FROM _$model$_model_view
          WHERE stat_action='$action$' $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$ $visibilityFilter(visibility=visibility)$ ) as db
    GROUP BY pid 
    ORDER BY count DESC    
    $if(paging)$ $paging()$ $endif$

    $else$ 
  
    SELECT count(*) as count,
        pid, 
        max(date) as date, 
        last(model) as model, 
        last(title) as title 
    FROM (SELECT DISTINCT ON (pid, stat_action, date, remote_ip_address)
            pid,
            stat_action,  
            date_trunc('day', date) as date, 
            remote_ip_address, 
            title, 
            model  
          FROM _$model$_model_view
          WHERE 1=1 $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$ $visibilityFilter(visibility=visibility)$ ) as db
    GROUP BY pid 
    ORDER BY count DESC 
    $if(paging)$ $paging()$ $endif$
    $endif$   
>>

selectModels() ::=<<
    select distinct model from statistic_access_log_detail
>>

/** date filter **/
dateFilter(fromDefined, toDefined) ::=<<
$if(fromDefined)$
   $if(toDefined)$
and "date" > ? and "date" < ? 
   $else$
and "date">? 
   $endif$
$elseif(toDefined)$
and "date" < ? 
$endif$
>>

/** visibility filter **/
visibilityFilter(visibility) ::=<<
$if(visibility.public)$
and "rights" =  'policy:public'
$elseif(visibility.private)$
and "rights" =  'policy:private' 
$endif$
>>



/** ipaddr filter **/
ipAddrFilter(ipaddr) ::=<<
$if(ipaddr)$
AND NOT remote_ip_address::text SIMILAR TO '$ipaddr$'
$endif$
>>

/** author */ 
selectAuthorReport(action, paging, fromDefined, toDefined, visibility, ipaddr) ::=<<
    $if(action)$ 
SELECT COUNT(*) as count, author_name 
FROM (SELECT DISTINCT ON (author_name, session_id, pid, stat_action, remote_ip_address)
        author_name
    FROM _authors_view 
    WHERE stat_action='$action$' $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$  $visibilityFilter(visibility=visibility)$ $ipAddrFilter(ipaddr=ipaddr)$ 
) as nauth
GROUP BY author_name
ORDER BY count DESC   
$if(paging)$ $paging()$ $endif$
    $else$   

SELECT COUNT(*) as count, author_name 
FROM (SELECT DISTINCT ON (author_name, session_id, pid, stat_action, remote_ip_address)
        author_name
    FROM _authors_view 
    WHERE 1=1 $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$  $visibilityFilter(visibility=visibility)$ $ipAddrFilter(ipaddr=ipaddr)$ 
) as nauth
GROUP BY author_name
ORDER BY count DESC  
$if(paging)$ $paging()$ $endif$
    $endif$   
>>


selectAuthorReportUnique(action, paging, fromDefined, toDefined, visibility, ipaddr) ::=<<
    $if(action)$ 
SELECT COUNT(*) as count, author_name 
FROM (SELECT DISTINCT ON (author_name, pid, stat_action, date, remote_ip_address)
        author_name,
	date_trunc('day', date) as date
    FROM _authors_view 
    WHERE stat_action='$action$' $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$  $visibilityFilter(visibility=visibility)$ $ipAddrFilter(ipaddr=ipaddr)$ 
) as nauth
GROUP BY author_name
ORDER BY count DESC  
$if(paging)$ $paging()$ $endif$
    $else$   

SELECT COUNT(*) as count, author_name 
FROM (SELECT DISTINCT ON (author_name, pid, stat_action, date, remote_ip_address)
        author_name,
	date_trunc('day', date) as date
    FROM _authors_view 
    WHERE 1=1 $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$  $visibilityFilter(visibility=visibility)$ $ipAddrFilter(ipaddr=ipaddr)$ 
) as nauth
GROUP BY author_name
ORDER BY count DESC 
$if(paging)$ $paging()$ $endif$
    $endif$   
>>

/** paging */
paging() ::=<<offset ? limit ?>>


/** language */
selectLangReport(action, fromDefined, toDefined, visibility, ipaddr) ::=<<
    $if(action)$ 
    
SELECT COUNT(*) as count, lang 
FROM (SELECT DISTINCT ON (lang, pid, stat_action, session_id, remote_ip_address) lang
      FROM _langs_view WHERE lang IS NOT NULL AND stat_action='$action$'  $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$  $visibilityFilter(visibility=visibility)$ $ipAddrFilter(ipaddr=ipaddr)$
) as nlang
GROUP BY lang
ORDER BY count DESC   

    $else$   

SELECT COUNT(*) as count, lang 
FROM (SELECT DISTINCT ON (lang, pid, stat_action, session_id, remote_ip_address) lang
      FROM _langs_view WHERE  1=1 AND lang IS NOT NULL $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$  $visibilityFilter(visibility=visibility)$ $ipAddrFilter(ipaddr=ipaddr)$
) as nlang
GROUP BY lang
ORDER BY count DESC    
    
    $endif$   
>>

selectLangReportUnique(action, fromDefined, toDefined, visibility, ipaddr) ::=<<
    $if(action)$ 
    
SELECT COUNT(*) as count, lang 
FROM (SELECT DISTINCT ON (lang, pid, stat_action, date, remote_ip_address)
                lang,
                date_trunc('day', date) as date
      FROM _langs_view WHERE lang IS NOT NULL AND stat_action='$action$'  $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$  $visibilityFilter(visibility=visibility)$ $ipAddrFilter(ipaddr=ipaddr)$
) as nlang
GROUP BY lang
ORDER BY count DESC  

    $else$   

SELECT COUNT(*) as count, lang 
FROM (SELECT DISTINCT ON (lang, pid, stat_action, date, remote_ip_address)
                lang,
                date_trunc('day', date) as date
      FROM _langs_view WHERE  1=1 AND lang IS NOT NULL $dateFilter(fromDefined=fromDefined,toDefined=toDefined)$  $visibilityFilter(visibility=visibility)$ $ipAddrFilter(ipaddr=ipaddr)$
) as nlang
GROUP BY lang
ORDER BY count DESC  
    
    $endif$   
>>



/** pids */
pids(pids) ::=<< $pids:{pid|'$pid$'};separator=","$ >>
